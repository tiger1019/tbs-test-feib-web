## service deploy
# kubectl delete -f service-deployment.yaml
# minikube kubectl -- delete -f ./service-deployment.yaml

# kubectl create -f service-deployment.yaml
# minikube kubectl -- create -f ./service-deployment.yaml


# create role to list service
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
 name: list-service
 namespace: default
rules:
# - apiGroups:
#    - ''
#   resources:
#    - pods
#   verbs:
#    - list    
  - apiGroups: [""]
    resources: ["pods", "endpoints", "services", "configmaps"]
    verbs: ["get", "watch", "list"]   
---
# create service account for app
apiVersion: v1
kind: ServiceAccount
metadata:
 name: app-user   
 namespace: default
---
# binding role to service account
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
 name: list-service_app-user
 namespace: default
roleRef:
 kind: ClusterRole
 name: list-service
 apiGroup: rbac.authorization.k8s.io
subjects:
 - kind: ServiceAccount
   name: app-user
   namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inward-rmt-service
data:
  profile: develop
  application-develop.yml: |
    spring:
      datasource:
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
          connectionTimeout: 30000
          idleTimeout: 600000
          maxLifetime: 1800000
        driver-class-name: org.postgresql.Driver
        url: jdbc:postgresql://10.9.46.224:5432/fxdb?currentSchema=public
        validationQuery: SELECT 1
        username: sa
        password: 123qwe
        #initialization-mode: always    
      jpa:
        properties:
          hibernate:
            # for lazy load no session exception
            enable_lazy_load_no_trans: true
            jdbc:
              lob:
                non_contextual_creation: true      
          show_sql: true
          format_sql: true
          ddl-auto: none
        database-platform: tw.com.firstbank.spring.dialect.PostgreSQL95JsonbDialect
        show-sql: true   
      rabbitmq:
       addresses: 10.102.89.25:5672
       adminAddresses: http://10.102.89.25:15672
       nodes: rabbit@10.102.89.25
       #username: guest
       #password: guest
       username: user
       password: Zy9DLrNXgd
       virtual-host: /
       useSSL: false
       sslProperties:
       ssl:
         keyStore:
         keyStorePassphrase:
         trustStore:
         trustStorePassphrase:
       channelCacheSize: 100
       listener:
         simple:
           default-requeue-rejected: false
           retry:
             enabled: false
           # auto, manual
           acknowledge-mode: auto
    opentracing:
      spring:
        cloud:
          jdbc:
            enabled: false
          log:
            enabled: true
      jaeger:
        enabled: true
        log-spans: true  
        service-name: ${spring.application.name}
        udp-sender:
          host: 10.108.123.24
          port: 6831
        const-sampler:
          decision: true
    aml-url: http://aml.fsb.lab/aml/v1/screen
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: inward-rmt-service
  labels:
    app: inward-rmt-service
spec:
  rules:
    - host: fx.fsb.lab
      http:
        paths: 
          - path: /
            pathType: Prefix
            backend:
              service:
                name: inward-rmt-service
                port: 
                  number: 8070              
---
apiVersion: v1
kind: Service
metadata:
  name: inward-rmt-service
spec:
  selector:
    app: inward-rmt-service
    
  #type: NodePort
  ports:
    - protocol: TCP
      port: 8070
      #nodePort: 32070
      targetPort: 8070
      
  #type: LoadBalancer
  #ports:
  #  - name: http
  #    port: 8888
  #    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inward-rmt-service
spec:
  selector:
      matchLabels:
        app: inward-rmt-service
  replicas: 2
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: inward-rmt-service
    spec:
      # pod service account
      serviceAccountName: app-user
      containers:
        - name: inward-rmt-service
          image: andylee1973/inward-rmt-service:latest
          imagePullPolicy: Always #IfNotPresent
          startupProbe:
            httpGet:
              path: /
              port: 8070
            failureThreshold: 30
            periodSeconds: 10            
          readinessProbe:
            httpGet:
              path: /
              port: 8070
              httpHeaders:
                - name: X-Custom-Header
                  value: test
            initialDelaySeconds: 30
            failureThreshold: 3
            periodSeconds: 60                  
          livenessProbe:
            httpGet:
              path: /
              port: 8070
              httpHeaders:
                - name: X-Custom-Header
                  value: test
            initialDelaySeconds: 60
            failureThreshold: 3
            periodSeconds: 3600            
          args: ["--spring.config.location=/home/spring/app/conf/"]
          ports:
            - name: http
              containerPort: 8070
          resources:
            limits:
              cpu: 1100m
            requests:
              cpu: 1050m
          env:         
            - name: SPRING_PROFILES_ACTIVE
              valueFrom:
                configMapKeyRef:
                    name: inward-rmt-service
                    key: profile
            - name: JAEGER_AGENT_PORT
              value: "6831"
          volumeMounts:
            - name: inward-rmt-service
              mountPath: /home/spring/app/conf/application-develop.yml
              subPath: application-develop.yml
      volumes:
        - name: inward-rmt-service
          configMap:
            name: inward-rmt-service
            items:
              - key: application-develop.yml
                path: application-develop.yml
            
                 
